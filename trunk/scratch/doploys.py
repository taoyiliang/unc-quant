import numpy as np
import scipy.stats as spst
import matplotlib.pyplot as p


p.subplot(2,2,1)
xs=np.arange(-5,5,0.001)
test2=spst.norm(0,1)
test=spst.norm(-2,1)
test3=spst.norm(0,2)
p.plot(xs,test2.pdf(xs),':',label='(0,1)')
p.plot(xs,test.pdf(xs),'-',label='(1,1)')
p.plot(xs,test3.pdf(xs),'--',label='(0,2)')
p.legend()
p.title('Normal')
p.ylabel('f(x)')
p.axis([-5,5,0,0.5])

p.subplot(2,2,2)
xs=np.arange(0,10,0.001)
test2=spst.gamma(3)
test=spst.gamma(4)
test3=spst.gamma(5)
p.plot(xs,test2.pdf(xs),':',label='(3)')
p.plot(xs,test.pdf(xs),'-',label='(4)')
p.plot(xs,test3.pdf(xs),'--',label='(5)')
p.legend()
p.title('Gamma')
p.axis([0,10,0,0.3])

p.subplot(2,2,3)
xs=np.arange(-5,5,0.001)
test2=spst.uniform(-2,1)
test=spst.uniform(-1,2)
test3=spst.uniform(-3,5)
p.plot(xs,test2.pdf(xs),':',label='(-2,1)')
p.plot(xs,test.pdf(xs),'-',label='(-1,2)')
p.plot(xs,test3.pdf(xs),'--',label='(-3,5)')
p.legend()
p.title('Uniform')
p.xlabel('x')
p.ylabel('f(x)')
p.axis([-4,4,0,1.1])

p.subplot(2,2,4)
xs=np.arange(0,1,0.001)
test2=spst.beta(2,2)
test=spst.beta(3,2)
test3=spst.beta(2,5)
p.plot(xs,test2.pdf(xs),':',label='(2,2)')
p.plot(xs,test.pdf(xs),'-',label='(3,2)')
p.plot(xs,test3.pdf(xs),'--',label='(2,5)')
p.legend()
p.title('Beta')
p.xlabel('x')
p.axis([0,1,0,2.5])

p.figure()

p.subplot(2,2,1)
xs=np.arange(0,10,0.001)
test2=spst.expon(scale=1)
test=spst.expon(scale=2)
test3=spst.expon(scale=3)
p.plot(xs,test2.pdf(xs),':',label='(1)')
p.plot(xs,test.pdf(xs),'-',label='(2)')
p.plot(xs,test3.pdf(xs),'--',label='(3)')
p.title('Exponential')
p.ylabel('f(x)')
p.axis([0,6,0,1.1])
p.legend()

p.subplot(2,2,2)
xs=np.arange(0.001,10,0.001)
test2=spst.lognorm(1,scale=2)
test=spst.lognorm(2,scale=2)
test3=spst.lognorm(1,scale=5)
p.plot(xs,test2.pdf(xs),':',label='(1,2)')
p.plot(xs,test.pdf(xs),'-',label='(2,2)')
p.plot(xs,test3.pdf(xs),'--',label='(1,5)')
p.title('Log Normal')
p.axis([0,10,0,0.35])
p.legend()

p.subplot(2,2,3)
xs=np.arange(0,5,0.001)
test2=spst.triang(1./2.,loc=1,scale=4)
test=spst.triang(2./3.,loc=0,scale=4)
test3=spst.triang(1./3.,loc=0,scale=3)
p.plot(xs,test2.pdf(xs),':',label='(1/2,1,4)')
p.plot(xs,test.pdf(xs),'-',label='(2/3,0,4)')
p.plot(xs,test3.pdf(xs),'--',label='(1/3,0,3)')
p.title('Triangular')
p.xlabel('x')
p.axis([0,5,0,1])
p.legend()

p.subplot(2,2,4)
xs=np.arange(-5,5,0.001)
test=spst.weibull_min(1.5)
test2=spst.weibull_min(1)
test3=spst.weibull_min(3)
p.plot(xs,test2.pdf(xs),':',label='(1)')
p.plot(xs,test.pdf(xs),'-',label='(3/2)')
p.plot(xs,test3.pdf(xs),'--',label='(3)')
p.title('Weibull')
p.xlabel('x')
p.ylabel('f(x)')
p.axis([0,4,0,1.3])
p.legend()

p.show()
